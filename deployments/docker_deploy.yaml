version: '3'

services:
  api:
    image: ${IMAGE_Name}:${IMAGE_Tag}
    restart: always
    container_name: ${APP_Name}-api
    #labels: { autoheal: true } # work with willfarrell/autoheal
    #healthcheck:
      #test: ["CMD", "curl", "-fI", "--connect-timeout", "2", "http://localhost:9015/healthz"]
      #start_period: 3s
      #interval: 10s
      #timeout: 2s
      #retries: 3
    depends_on: ["postgres", "redis"]
    user: "${USER_UID}:${USER_GID}"
    #network_mode: host
    networks: ["net"]
    ports: ["127.0.0.1:${HTTP_Port}:${HTTP_Port}", "9015:9015", "9019:9016"]
    deploy:
      resources:
        limits: { cpus: "0.5", memory: 2048M }
        #limits: { cpus: "4", memory: 8g }
        #reservations:
          #cpus: "1"
          #memory: 4g
          #devices:
          #- driver: nvidia
          #  device_ids: ['0', '3']
          #  count: 1
          #  count: all
          #  capabilities: [gpu]
    environment: ["TZ=Asia/Shanghai"]
    working_dir: /app
    volumes:
    - ./configs/:/app/configs:ro
    - ./logs/:/app/logs
    - ./site/:/app/site
    # - ./data/${APP_Name}:/app/data
    command:
    - ./target/main
    - api
    - -release
    - -config=configs/prod.yaml
    - -http.addr=:${HTTP_Port}

  crons:
    image: ${IMAGE_Name}:${IMAGE_Tag}
    restart: always
    container_name: ${APP_Name}-crons
    depends_on: ["postgres", "redis"]
    user: "${USER_UID}:${USER_GID}"
    #network_mode: host
    networks: ["net"]
    environment: ["TZ=Asia/Shanghai"]
    working_dir: /app
    volumes:
    - ./configs/:/app/configs:ro
    - ./logs/:/app/logs
    command:
    - ./target/${APP_Name}
    - crons
    - -config=configs/crons.yaml

  swagger:
    image: ${IMAGE_Name}:${IMAGE_Tag}
    restart: always
    container_name: ${APP_Name}-swagger
    user: "${USER_UID}:${USER_GID}"
    #network_mode: host
    network_mode: bridge
    ports: ["9017:9017"]
    environment: ["TZ=Asia/Shanghai"]
    volumes:
    - ./configs/swagger.yaml:/app/configs/swagger.yaml:ro
    command:
    - ./target/main
    - swagger
    - -config=configs/swagger.yaml
    - -http.addr=:9017

  postgres:
    image: postgres:16-alpine
    restart: always
    container_name: ${APP_Name}-postgres
    #network_mode: host
    networks: ["net"]
    # ports: ["127.0.0.1:5432:5432"]
    environment:
    - TZ=Asia/Shanghai
    - PGTZ=Asia/Shanghai
    - POSTGRES_USER=account
    - POSTGRES_DB=db
    - POSTGRES_PASSWORD=password
    - PGDATA=/var/lib/postgresql/data
    volumes:
    - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    user: "${USER_UID}:${USER_GID}"
    #network_mode: host
    networks: ["net"]
    # ports: ['127.0.0.1:6379:6379']
    container_name: ${APP_Name}-redis
    deploy:
      resources:
        limits:
          memory: 2.0G # 512M
    environment:
    - TZ=Asia/Shanghai
    # ALLOW_EMPTY_PASSWORD is recommended only for development.
    - ALLOW_EMPTY_PASSWORD=yes
    - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    working_dir: /app
    volumes:
    - ./configs/redis.conf:/app/configs/redis.conf
    - ./data/redis:/app/data
    command:
    - redis-server
    - /app/configs/redis.conf
    - --loglevel
    - warning
    - --save
    - 30
    - 10

networks:
  net: { name: "local", driver: bridge, external: false }
